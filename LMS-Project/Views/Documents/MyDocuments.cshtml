@using LMS_Project.Models.LMS;

@model LMS_Project.ViewModels.MyDocumentsVM

@{
    ViewBag.Title = "My Uploaded Documents";
}

<h2>My uploaded Documents</h2>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Documents.First().Course)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Documents.First().DocumentName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Documents.First().UploadingDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Documents.First().VisibleFor)
        </th>
        @if (Model.ShowGrades)
        {
            <th>
                @Html.DisplayNameFor(model => model.Documents.First().Grade)
            </th>
        }
        <th></th>
    </tr>

    @foreach (var item in Model.Documents)
    {
        <tr>
            <td>
                @Html.ActionLink(item.Course.Subject.Name, "Documents", "Courses", new { id = item.CourseID }, null)
            </td>
            <td>
                @Html.ActionLink(item.DocumentName, "Download", "Documents", new { id = item.ID }, null)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UploadingDate)
            </td>
            <td>
                @* Two cases: *@
                @if (item.VisibleFor.Name == RoleConstants.Student)
                {
                    @* - The document is visible for all students *@
                    @Html.DisplayName("The whole classroom")
                }
                else
                {
                    @* - The document is only visible for the teacher *@

                    @* Two cases: *@
                if (User.IsInRole(RoleConstants.Student))
                {
                    @* -- The uploader is a student *@
                    @Html.DisplayName(item.Course.Teacher.ToString())
                }
                else
                {
                    @* -- The uploader is a teacher *@
                    @Html.DisplayName("Myself")
                    }
                }
            </td>
            @if (Model.ShowGrades)
            {
                <td>
                @if (item.Grade != null)
                {
                    @Html.DisplayFor(modeItem => item.Grade.AGrade)
                }
            </td>
            }
            <td>
                @if (item.Grade == null)
                {
                    @Html.ActionLink("Delete", "Delete", new { id = item.ID })
                }
            </td>
        </tr>
    }

</table>

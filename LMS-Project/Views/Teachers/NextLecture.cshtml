@using LMS_Project.Models.LMS
@using LMS_Project.Repositories
@using LMS_Project.ViewModels

@model DetailedScheduleVM

@{
    ViewBag.Title = "Next Lecture";
}

<h2>Next Lecture</h2>

<div>
    <hr />
    @if (Model.Schedule == null)
    {
        <p class="alert-info">You don't have any more lectures for today.</p>
    }
    else
    {
        <table class="table">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Schedule.WeekDay)
                    </th>
                    <th>
                        @Html.DisplayName("Time")
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Schedule.Course)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Schedule.Classroom)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Schedule.Students)
                    </th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>
                        @Html.DisplayFor(model => model.Schedule.WeekDay)
                    </td>
                    <td>
                        @Html.DisplayName(Model.Schedule.BeginningTime + "-" + Model.Schedule.EndingTime)
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.Schedule.Course.Subject.Name)
                    </td>
                    <td>
                        @{
        string remarks = Model.Schedule.Classroom.Remarks;
        if (remarks != null && remarks.Length > 0)
        {
            remarks = " - " + remarks;
        }
                        }
                        @Html.DisplayName(Model.Schedule.Classroom.Name + " (" + Model.Schedule.Classroom.Location + ")" + remarks)
                    </td>
                    <td>
                        <table class="table-condensed">
                            @foreach (User student in Model.Schedule.Students.OrderBy(s => s.LastName).ThenBy(s => s.FirstName))
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayName(student.ToString())
                                    </td>
                                </tr>
                            }
                        </table>
                    </td>
                </tr>
            </tbody>
        </table>
    }
</div>

@if (Model.Documents.Count() > 0)
{
    <h2>Related Documents</h2>
    <hr />

    <div>
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Documents.First().DocumentName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Documents.First().UploadingDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Documents.First().Uploader)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Documents.First().Grade)
                </th>
                <th></th>
            </tr>

            @foreach (Document document in Model.Documents)
            {
                <tr>
                    <td>
                        @Html.ActionLink(document.DocumentName, "Download", "Documents", new { id = document.ID }, null)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => document.UploadingDate)
                    </td>
                    <td>
                        @Html.DisplayName(document.Uploader.ToString())
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => document.Grade.AGrade)
                    </td>
                    <td>
                        @if (document.VisibleFor.Id == new RolesRepository().RoleByName(RoleConstants.Student).Id)
                        {
                            @Html.ActionLink("Delete", "Delete", "Documents", new { id = document.ID }, null)
                        }
                        else if (document.UploaderID != document.Course.TeacherID && document.GradeID == null)
                        {
                            @Html.ActionLink("Set a Grade", "Grade", "Grades", new { id = document.ID }, null)
                        }
                    </td>
                </tr>
            }
        </table>
    </div>
}

<p>
    @Html.ActionLink("Back to Planning", "Planning")
</p>
